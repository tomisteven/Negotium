{"version":3,"sources":["../../src/controllers/services.controller.js"],"names":["getServices","req","res","user_id","user","User","findById","response","services","servicios","status","json","message","createService","body","nombre","precio","cantidadVendidos","cantidadDisponibles","descripcion","imagen","newService","push","save","result","itemService","items","forEach","item","index","deleteService","id","params","newServices","filter","service","_id"],"mappings":"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","sourcesContent":["import User from '../models/user.js';\n\n/* servicios: [{\n        nombre: String,\n        precio: Number,\n        cantidadVendidos: Number,\n        cantidadDisponibles: Number,\n        descripcion: String,\n        imagen: String,\n        fecha: Date\n}],*/\n\nconst getServices= async (req, res) => {\n    const {user_id} = req.user;\n    const response = await User.findById(user_id)\n    const services = response.servicios\n    response ? res.status(200).json(services) : res.status(404).json({message: \"No es un id Valido\"});\n};\n\nconst createService= async (req, res) => {\n    const {user_id} = req.user;\n    const {nombre, precio, cantidadVendidos, cantidadDisponibles, descripcion, imagen} = req.body;\n    const response = await User.findById(user_id)\n    const services = response.servicios\n    const newService = {\n        nombre,\n        precio,\n        cantidadVendidos,\n        cantidadDisponibles,\n        descripcion\n    }\n    services.push(newService)\n    response.servicios = services\n    const result = await response.save()\n    result ? res.status(200).json(result) : res.status(404).json({message: \"No es un id Valido\"});\n};\n\nconst itemService = async (req, res) => {\n    const {user_id} = req.user;\n    const response = await User.findById(user_id)\n    const services = response.servicios\n    const items= []\n    services.forEach((item, index) => {\n        items.push(\n            item.nombre,\n        )\n    })\n    response ? res.status(200).json(items) : res.status(404).json({message: \"No es un id Valido\"});\n}\n\nconst deleteService = async (req, res) => {\n    const {user_id} = req.user;\n    const id = req.params.id\n    const response = await User.findById(user_id)\n    const services = response.servicios\n    const newServices = services.filter((service) => {\n        return service._id != id\n    })\n    response.servicios = newServices\n    const result = await response.save()\n    result ? res.status(200).json(result) : res.status(404).json({message: \"No es un id Valido\"});\n}\n\n\n\n\nexport{\n    getServices,\n     createService,\n     itemService,\n        deleteService,\n\n}"],"file":"services.controller.js"}