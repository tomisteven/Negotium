{"version":3,"sources":["../../src/controllers/recordatorios.controller.js"],"names":["getRecordatorios","req","res","user_id","user","User","findById","response","status","json","message","recordatorios","createRecordatorio","recordatorio","body","push","save","updateRecordatorio","id","params","find","_id","nombre","descripcion","fechaLimite","prioridad","completed","deleteRecordatorio","filter"],"mappings":"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","sourcesContent":["/*  nombre: String,\r\n        descripcion: String,\r\n        fecha: Date,\r\n        prioridad: String */\r\nimport User from '../models/user.js'\r\n\r\n\r\nconst getRecordatorios = async (req, res) => {\r\n    const {user_id} = req.user\r\n    const response = await User.findById(user_id)\r\n    if(!response) res.status(404).json({message: \"No hay cliente con ese id\"});\r\n    const recordatorios = response.recordatorios;\r\n    if(recordatorios != null) res.status(200).json(recordatorios);\r\n}\r\n\r\nconst createRecordatorio = async (req, res) => {\r\n    const {user_id} = req.user\r\n    const response = await User.findById(user_id)\r\n    if(!response) res.status(404).json({message: \"No hay cliente con ese id\"});\r\n    const recordatorio = req.body;\r\n    response.recordatorios.push(recordatorio);\r\n    await response.save();\r\n    res.status(200).json({message: \"Recordatorio creado\", recordatorio: recordatorio});\r\n\r\n}\r\n\r\nconst updateRecordatorio = async (req, res) => {\r\n    const {user_id} = req.user\r\n    const id = req.params.id;\r\n    const response = await User.findById(user_id)\r\n    if(!response) res.status(404).json({message: \"No hay cliente con ese id\"});\r\n    const recordatorio = response.recordatorios.find(recordatorio => recordatorio._id == id);\r\n    if(recordatorio != null) {\r\n        recordatorio.nombre = req.body.nombre || recordatorio.nombre;\r\n        recordatorio.descripcion = req.body.descripcion || recordatorio.descripcion;\r\n        recordatorio.fechaLimite = req.body.fechaLimite || recordatorio.fechaLimite;\r\n        recordatorio.prioridad = req.body.prioridad || recordatorio.prioridad;\r\n        recordatorio.completed = req.body.completed || recordatorio.completed;\r\n        await response.save();\r\n        res.status(200).json({message: \"Recordatorio actualizado\", recordatorio: recordatorio});\r\n    }\r\n\r\n}\r\n\r\nconst deleteRecordatorio = async (req, res) => {\r\n    const {user_id} = req.user\r\n    const id = req.params.id;\r\n    const response = await User.findById(user_id)\r\n    if(!response) res.status(404).json({message: \"No hay cliente con ese id\"});\r\n    const recordatorio = response.recordatorios.find(recordatorio => recordatorio._id == id);\r\n    if(recordatorio != null) {\r\n        response.recordatorios = response.recordatorios.filter(recordatorio => recordatorio._id != id);\r\n        await response.save();\r\n        res.status(200).json({message: \"Recordatorio eliminado\", recordatorio: recordatorio});\r\n    }\r\n}\r\n\r\n\r\nexport{\r\n    getRecordatorios,\r\n    createRecordatorio,\r\n    updateRecordatorio,\r\n    deleteRecordatorio\r\n}"],"file":"recordatorios.controller.js"}