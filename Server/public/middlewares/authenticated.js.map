{"version":3,"sources":["../../src/middlewares/authenticated.js"],"names":["asureAuth","req","res","next","token","headers","authorization","status","send","message","payload","exp","now","Date","getTime","user","error","tokenClient","token_client"],"mappings":";;;;;;;;AACA;;AAEA;AACA,SAASA,SAAT,CAAmBC,GAAnB,EAAuBC,GAAvB,EAA2BC,IAA3B,EAAgC;AAC5B,MAAMC,KAAK,GAAGH,GAAG,CAACI,OAAJ,CAAYC,aAA1B;;AAEA,MAAG,CAACF,KAAJ,EAAU;AACN,WAAOF,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,MAAAA,OAAO,EAAC;AAAT,KAArB,CAAP;AACH;;AAED,MAAI;AACA,QAAMC,OAAO,GAAG,uBAAaN,KAAb,CAAhB;AACA,QAAOO,GAAP,GAAcD,OAAd,CAAOC,GAAP;AACA,QAAMC,GAAG,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAZ,CAHA,CAIA;;AACA,QAAGF,GAAG,IAAID,GAAV,EAAc;AACV,aAAOT,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,QAAAA,OAAO,EAAC;AAAT,OAArB,CAAP;AACH,KAPD,CAQA;;;AACAR,IAAAA,GAAG,CAACc,IAAJ,GAAWL,OAAX;AACAP,IAAAA,IAAI;AAEP,GAZD,CAYE,OAAOa,KAAP,EAAc;AACZ,WAAOd,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,MAAAA,OAAO,EAAC;AAAT,KAArB,CAAP;AACH;AAIJ;;AAGD,IAAMQ,WAAW,GAAG,SAAdA,WAAc,CAAChB,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAkB;AAClC,MAAMe,YAAY,GAAGjB,GAAG,CAACI,OAAJ,CAAYC,aAAjC;;AACA,MAAG,CAACY,YAAJ,EAAiB;AACb,WAAOhB,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,MAAAA,OAAO,EAAC;AAAT,KAArB,CAAP;AACH;;AACDN,EAAAA,IAAI;AACP,CAND","sourcesContent":["\r\nimport {decodedToken} from '../utils/jwt';\r\n\r\n//middleware que verifica si el usuário está autenticado\r\nfunction asureAuth(req,res,next){\r\n    const token = req.headers.authorization\r\n\r\n    if(!token){\r\n        return res.status(403).send({message:\"No hay token de autorizacion\"});\r\n    }\r\n\r\n    try {\r\n        const payload = decodedToken(token);\r\n        const {exp} = payload;\r\n        const now = new Date().getTime();\r\n        //si el token ya expiro\r\n        if(now >= exp){\r\n            return res.status(403).send({message:\"Token expirado\"});\r\n        }\r\n        //si el token no expiro y es valido lo guardamos en el request\r\n        req.user = payload;\r\n        next();\r\n\r\n    } catch (error) {\r\n        return res.status(401).send({message:\"Token invalido\"});\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\nconst tokenClient = (req,res,next) => {\r\n    const token_client = req.headers.authorization;\r\n    if(!token_client){\r\n        return res.status(403).send({message:\"No hay token de autorizacion\"});\r\n    }\r\n    next();\r\n}\r\n\r\n\r\nexport{\r\n    asureAuth,\r\n    tokenClient\r\n}"],"file":"authenticated.js"}